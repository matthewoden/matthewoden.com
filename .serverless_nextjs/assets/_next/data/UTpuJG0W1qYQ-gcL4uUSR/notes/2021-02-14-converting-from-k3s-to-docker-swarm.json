{
  "pageProps": {
    "post": {
      "mdxSource": {
        "compiledSource": "\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"After an irrecoverable k3s failure on my pi cluster, I've chosen to simplify\\nto a basic docker swarm cluster today. I learned what I wanted - and the level of\\ndebugging required to sort out why my servers wouldn\\u2019t come up was a little too\\nmuch like my day job, and not enough of an experimental sandbox.\"), mdx(\"p\", null, \"You just don't need 7 containers to orchestrate a deployments to a pi cluster.\"), mdx(\"h2\", {\n    \"id\": \"tearing-down-k3s-from-k3sup\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#tearing-down-k3s-from-k3sup\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Tearing down k3s from k3sup\"), mdx(\"p\", null, \"As automated as the\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k3sup\"), \" tool is, teardown is a process left to be discovered.\"), mdx(\"p\", null, \"There's two scripts - one on master, and one for agents It's\\nTo tear down kubernetes, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k3sup\"), \" comes with a few built in scripts.cripts. They're\"), mdx(\"p\", null, \"On master\"), mdx(\"p\", null, \"/usr/local/bin/k3s-uninstall.sh\"), mdx(\"pre\", {\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"/usr/local/bin/k3s-uninstall.sh\\n\\n\")), mdx(\"p\", null, \"Feb 11th - Dependency Confusion\\neah - we thankfully set up our NPM registries to avoid this. (also, I wrote the auth layer for our registry.)\\nAll private scopes were also registered publicly, with no packages, So attempting to install private packages from the public registry just fails.\\nAll attempts to install/publish unscoped packages from a private registry are rejected.\"), mdx(\"p\", null, \"Feb 10th - Reverse Engineer a container\"), mdx(\"p\", null, \"History API for docker to recreate layer\"), mdx(\"p\", null, \"Had to figure out how to reverse engineer a container to a dockerfile today. Dive is a snazzy little tool that lets you explore docker layers.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/wagoodman/dive\"\n  }), \"https://github.com/wagoodman/dive\")), mdx(\"p\", null, \"January 8th\\nI\\u2019ve never been an inbox zero kind of person, because I hate manually archiving/deleting emails - I shouldn\\u2019t have to do it. I also hate gmail\\u2019s UI for multiple views, tabs, inboxes, etc. However I organize my email should work on every email client I use - and google\\u2019s experiments just don\\u2019t make it to the phone app.\"), mdx(\"p\", null, \"\\u2026So, I have a bunch of gmail filters that label/archive/organize emails as they come in.\\nMost of my filters automatically mark things as read and shove them away for reference. But a feature I wanted was to have certain emails, like order confirmations) still notify me, and then get cleaned up quickly after that. Or, if I don\\u2019t have any rules but I\\u2019ve read the message? Just clean up the cruft after a while. I don\\u2019t need to manually organize everything.\"), mdx(\"p\", null, \"Ultimately, my inbox should be a list of unread, actionable messages.\\nGoogle app scripts lets you call the gmail api - so I wrote a little script to do just that. Anything that I\\u2019ve read that\\u2019s older than 10 days is cleaned up. Any email I want to get notified about (for right now, just order confirmations) is cleaned up after 24 hours.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/matthewoden/autoarchiver\"\n  }), \"https://github.com/matthewoden/autoarchiver\")), mdx(\"p\", null, \"Gmailctl is a handy tool for managing a pile of filters.\"), mdx(\"p\", null, \"The rest is just transactional emails that need to get wrangled.\"), mdx(\"p\", null, \"Plus, simplify to clean up the gmail UI\"), mdx(\"p\", null, \"January 12th\"), mdx(\"p\", null, \"I know there's not a lot of mac folks in here (actually, are there any besides me?) but screenotate.com is a wonderful tool. Not free - but having OCR on all your screenshots, so you have searchable, annotated results? Super nice.\"), mdx(\"p\", null, \"Especially with the number of video calls/meetings I have - I've been screencapping when folks share their screen so I can grab a url, or text off a slide or whatever's being shared without interrupting anyone.\"), mdx(\"p\", null, \"Janyart 26th\"), mdx(\"p\", null, \"Started using Bear for notes, and I'm a big, big fan. I love the hybrid markdown approach, where it keeps the markdown syntax, but also applies the formatting. e.g. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Some bold text\"), \" and /some italic text/\"), mdx(\"p\", null, \"Also, little things like tagging, instead of folders. And any note that uses checkboxes (that aren't all checked) showing up in a \\\"TODO\\\" section. Like many of the tools I use, it's mac only.\"), mdx(\"p\", null, \"January 27th\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://espanso.org/\"\n  }), \"https://espanso.org/\")), mdx(\"p\", null, \"espanso\\nHome\\nAn Open Source, Cross-platform Text Expander written in Rust.\"), mdx(\"p\", null, \"Matthew Potter 8:22 PM\\nOne of the things I immediately installed was the one that fixes the most commonly misspelled words, because I no word good\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>After an irrecoverable k3s failure on my pi cluster, I&#x27;ve chosen to simplify\nto a basic docker swarm cluster today. I learned what I wanted - and the level of\ndebugging required to sort out why my servers wouldn’t come up was a little too\nmuch like my day job, and not enough of an experimental sandbox.</p><p>You just don&#x27;t need 7 containers to orchestrate a deployments to a pi cluster.</p><h2 id=\"tearing-down-k3s-from-k3sup\"><a href=\"#tearing-down-k3s-from-k3sup\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Tearing down k3s from k3sup</h2><p>As automated as the<code>k3sup</code> tool is, teardown is a process left to be discovered.</p><p>There&#x27;s two scripts - one on master, and one for agents It&#x27;s\nTo tear down kubernetes, <code>k3sup</code> comes with a few built in scripts.cripts. They&#x27;re</p><p>On master</p><p>/usr/local/bin/k3s-uninstall.sh</p><pre class=\"language-bash\"><code class=\"language-bash\">/usr/local/bin/k3s-uninstall.sh\n\n</code></pre><p>Feb 11th - Dependency Confusion\neah - we thankfully set up our NPM registries to avoid this. (also, I wrote the auth layer for our registry.)\nAll private scopes were also registered publicly, with no packages, So attempting to install private packages from the public registry just fails.\nAll attempts to install/publish unscoped packages from a private registry are rejected.</p><p>Feb 10th - Reverse Engineer a container</p><p>History API for docker to recreate layer</p><p>Had to figure out how to reverse engineer a container to a dockerfile today. Dive is a snazzy little tool that lets you explore docker layers.\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/wagoodman/dive\">https://github.com/wagoodman/dive</a></p><p>January 8th\nI’ve never been an inbox zero kind of person, because I hate manually archiving/deleting emails - I shouldn’t have to do it. I also hate gmail’s UI for multiple views, tabs, inboxes, etc. However I organize my email should work on every email client I use - and google’s experiments just don’t make it to the phone app.</p><p>…So, I have a bunch of gmail filters that label/archive/organize emails as they come in.\nMost of my filters automatically mark things as read and shove them away for reference. But a feature I wanted was to have certain emails, like order confirmations) still notify me, and then get cleaned up quickly after that. Or, if I don’t have any rules but I’ve read the message? Just clean up the cruft after a while. I don’t need to manually organize everything.</p><p>Ultimately, my inbox should be a list of unread, actionable messages.\nGoogle app scripts lets you call the gmail api - so I wrote a little script to do just that. Anything that I’ve read that’s older than 10 days is cleaned up. Any email I want to get notified about (for right now, just order confirmations) is cleaned up after 24 hours.\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/matthewoden/autoarchiver\">https://github.com/matthewoden/autoarchiver</a></p><p>Gmailctl is a handy tool for managing a pile of filters.</p><p>The rest is just transactional emails that need to get wrangled.</p><p>Plus, simplify to clean up the gmail UI</p><p>January 12th</p><p>I know there&#x27;s not a lot of mac folks in here (actually, are there any besides me?) but screenotate.com is a wonderful tool. Not free - but having OCR on all your screenshots, so you have searchable, annotated results? Super nice.</p><p>Especially with the number of video calls/meetings I have - I&#x27;ve been screencapping when folks share their screen so I can grab a url, or text off a slide or whatever&#x27;s being shared without interrupting anyone.</p><p>Janyart 26th</p><p>Started using Bear for notes, and I&#x27;m a big, big fan. I love the hybrid markdown approach, where it keeps the markdown syntax, but also applies the formatting. e.g. <em>Some bold text</em> and /some italic text/</p><p>Also, little things like tagging, instead of folders. And any note that uses checkboxes (that aren&#x27;t all checked) showing up in a &quot;TODO&quot; section. Like many of the tools I use, it&#x27;s mac only.</p><p>January 27th\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://espanso.org/\">https://espanso.org/</a></p><p>espanso\nHome\nAn Open Source, Cross-platform Text Expander written in Rust.</p><p>Matthew Potter 8:22 PM\nOne of the things I immediately installed was the one that fixes the most commonly misspelled words, because I no word good</p>",
        "scope": {}
      },
      "frontMatter": {
        "wordCount": 651,
        "readingTime": {
          "text": "4 min read",
          "minutes": 3.245,
          "time": 194700.00000000003,
          "words": 649
        },
        "slug": "2021-02-14-converting-from-k3s-to-docker-swarm",
        "fileName": "2021-02-14-converting-from-k3s-to-docker-swarm.md",
        "title": "Converting from K3s to Docker Swarm",
        "date": "2021-02-14",
        "tags": ["devops", "docker"],
        "draft": false,
        "summary": "Sometimes, it's nice to scale down the homelab to something a little simpler."
      }
    },
    "prev": {
      "title": "Setting up SSL for a single-instance deploy on Elastic Beanstalk, with Docker",
      "date": "2017-09-04",
      "tags": ["devops", "docker"],
      "draft": false,
      "summary": "A step by step guide to have https on your personal projects.",
      "slug": "2017-09-04-single-node-ssl-aws-elastic-beanstalk"
    },
    "next": null
  },
  "__N_SSG": true
}
